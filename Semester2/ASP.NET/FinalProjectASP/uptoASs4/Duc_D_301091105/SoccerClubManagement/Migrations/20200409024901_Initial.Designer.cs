// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SoccerClubManagement.Models;
using System;

namespace SoccerClubManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200409024901_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SoccerClubManagement.Models.Club", b =>
                {
                    b.Property<int>("ClubID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClubEmail")
                        .IsRequired();

                    b.Property<string>("ClubName")
                        .IsRequired();

                    b.Property<string>("ClubPhoneNumber")
                        .IsRequired();

                    b.HasKey("ClubID");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("SoccerClubManagement.Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClubID");

                    b.Property<int>("PlayerAge");

                    b.Property<int>("PlayerHeight");

                    b.Property<string>("PlayerName");

                    b.Property<int>("PlayerWeight");

                    b.HasKey("PlayerID");

                    b.HasIndex("ClubID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SoccerClubManagement.Models.Player", b =>
                {
                    b.HasOne("SoccerClubManagement.Models.Club")
                        .WithMany("Players")
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
